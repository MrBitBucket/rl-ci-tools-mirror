#!/bin/bash
# Run with:
#	 docker run --rm -v $PWD:/io quay.io/pypa/manylinux1_x86_64 /io/build_reportlab.sh
# or something like:
#	 docker run --rm -e PYTHONS=2.7 -v $PWD:/io quay.io/pypa/manylinux1_x86_64 /io/build_reportlab.sh
# or:
#	 docker run --rm -e PYTHONS=2.7 -v $PWD:/io quay.io/pypa/manylinux1_x86_64 /io/build_reportlab.sh
set -e

UNICODES=${UNICODES:-16 32}
WHEELHOUSE=${WHEELHOUSE:-/io/wheelhouse}
WHEELS_UNFIXED=${WHEELS_UNFIXED:-/io/wheels_unfixed}

mark(){
	echo "######################################################################################"
	[ "$#" -gt 0 ] && echo "$@" && echo "######################################################################################"
	}

# Manylinux, openblas version, lex_ver etc etc
mark source /io/manylinux_utils.sh
source /io/manylinux_utils.sh
mark source /io/library_builders.sh
source /io/library_builders.sh
mark "$(env)"

#mark build_jpeg
#build_jpeg
#mark build_tiff
#build_tiff
#mark build_openjpeg
#build_openjpeg
#mark build_lcsm2
#build_lcms2
#mark build_libwebp
#build_libwebp
#mark build_freetype
#build_freetype
#yum install -y tk-devel

PYLO=${PYLO:-2.7}
PYHI=${PYHI:-3.7}

OPATH="$PATH"
export RL_MANYLINUX=1
ENV=/io/test-env
SRC=/io/test-src

# Compile wheels
for PYTHON in ${PYTHONS}; do
	[ $(lex_ver $PYTHON) -lt $(lex_ver $PYLO) ] && continue
	[ $(lex_ver $PYTHON) -ge $(lex_ver $PYHI) ] && continue
	for uw in ${UNICODES}; do
		[ $(lex_ver $PYTHON) -ge $(lex_ver 3.3) ] && [ "$uw" != 32 ] && continue
		(
		mark "building reportlab wheel PYTHON=$PYTHON UNICODE_WIDTH=$uw"
		PP="$(cpython_path $PYTHON $uw)"
		PY=$PP/bin/python
		mark "platform=$($PY -mplatform) sys.platform=$($PY -c'import sys;print(sys.platform)') os.name=$($PY -c'import os;print(os.name)')"
		export PATH="$PP/bin:$OPATH"
		PIP="$PP/bin/pip"
		echo "Testing ${REQUIREMENT} for Python $PYTHON"
		$PIP install virtualenv
		rm -rf $ENV
		$PY -mvirtualenv $ENV
		(
		cd $ENV
		. $ENV/bin/activate
		EPY=$ENV/bin/python
		EPIP=$ENV/bin/pip
		$EPIP install --find-links=/io/wheels ${REQUIREMENT}
		rm -f /tmp/eee
		cd ${SRC}
		$EPY setup.py test 2>&1 | tee /tmp/eee
		grep -q 'OK' /tmp/eee && R="##### OK  " || R="!!!!! FAIL"
		echo "${R} PYTHON=${PYTHON} UNICODE_WIDTH=${uw} ARCH=${ARCH}" >> /io/test-results.txt
		deactivate
		)
		rm -rf $ENV
		)
	done
done
